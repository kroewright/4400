from tkinter import *
#import PyMySQL

class FancyHotels:
    
    def __init__(self, win):
        self.Login(win) # pulls up the login window

    def Login(self, win):
        try:
            self.root.deiconify()   # redraws login screen after creating account
                                    # or trying to login again
        except:
            pass
        
        self.root = win # idk what this is, just the convention i learned in CS 2316
        self.root.title("Login")
        
        Label(self.root, text="Username").grid(row=1, column=0)
        Entry(self.root).grid(row=1, column=1, columnspan=3)
        
        Label(self.root, text="Password").grid(row=2, column=0)
        Entry(self.root).grid(row=2, column=1, columnspan=3)
        
        Button(self.root, text="Login", command=self.UserView).grid(row=3,
                                                                 columnspan=4)

        Label(self.root, text=" ").grid(row=4, column=0, rowspan=2)
        
        Button(self.root, text="Create New User Account",
               command=self.CreateAccount).grid(row=7, columnspan=4)

    #connects to network
    def Connect(self): # connects to database network
        try: # need to check this
            self.db=pymysql.connect(host="academic-mysql.cc.gatech.edu",
                                    db="cs4400_Group_16", user="cs4400_Group_16",
                                    passwd="cq35Y7W9")
            return self.db
            
        except: # bad internet connection, the login should be correct though
            messagebox.showinfo("Error!", "Check your internet connection")

    def CheckLogin(self):
        # connect to database and check username/pw
        
        # if user username/pw match -> self.UserView()
        
        # if mgr username/pw match -> self.MgrView()
        
        # no match -> self.Login(self.root)
        pass
  
    def UserView(self): # connect to database and check username/pw

        self.root.withdraw() # closes the login window
        
        self.userview = Tk()
        self.userview.title("Choose Functionality")
        
        Label(self.userview, text="Welcome Malvika").grid(row=0,sticky=W)
        Label(self.userview, text=" ").grid(row=1)
        
        Button(self.userview, text="Make a New Reservation", command=self.RoomSearch).grid(row=2)
        Button(self.userview, text="Update Your Reservation").grid(row=3)
        Button(self.userview, text="Cancel a Reservation").grid(row=4)
        Button(self.userview, text="Provide feedback").grid(row=5)
        Button(self.userview, text="View feedback").grid(row=6)

    def MgrView(self): # connect to database and check mgr username/pw

        self.root.withdraw() # closes the login window
        
        self.mgrview = Tk()
        self.mgrview.title("Choose Functionality")

        Label(self.mgrview, text="Welcome Malvika").grid(row=0,sticky=W)
        Label(self.mgrview, text=" ").grid(row=1)
        
        Button(self.mgrview, text="View Reservation Reports").grid(row=2)
        Button(self.mgrview, text="View Popular Room Category Reports").grid(row=3)
        Button(self.mgrview, text="View Revenue Reports").grid(row=4)

        
    def CreateAccount(self): # pulls up when user wants to create new account

        self.root.withdraw() # closes the login window
        
        self.createacct = Tk()
        self.createacct.title("New User Registration")

        Label(self.createacct, text=" ").grid(row=0, rowspan=2)

        Label(self.createacct, text="Username").grid(row=2, sticky=E)
        Entry(self.createacct).grid(row=2, column=1)

        Label(self.createacct, text="Password").grid(row=3, sticky=E)
        Entry(self.createacct).grid(row=3, column=1)

        Label(self.createacct, text="Confirm Password").grid(row=4, sticky=E)
        Entry(self.createacct).grid(row=4, column=1)

        Label(self.createacct, text="Email").grid(row=5, sticky=E)
        Entry(self.createacct).grid(row=5, column=1)

        Label(self.createacct, text=" ").grid(row=6, rowspan=2)

        Button(self.createacct, text="Submit",
               command=self.Return2Login).grid(row=8, columnspan=2) # user can now login

    def Return2Login(self): # helper function to take users back to login screen
    
        # enter SQL statement here to insert to user account info
        
        self.createacct.destroy() # removes create account window
        self.Login(self.root) # recalls the login window

    def RoomSearch(self):
        
        self.userview.withdraw() # closes the user option's window
        
        self.rmsrch = Tk()
        self.rmsrch.title("Search Rooms")

        RSvar = StringVar(self.rmsrch)
        RSvar.set("Atlanta")

        Label(self.rmsrch, text="Location").grid(row=0, column=0, sticky=W)
        option = OptionMenu(self.rmsrch, RSvar, "Atlanta", "Charlotte",
                            "Savannah", "Orlando", "Miami")
        option.grid(row=0, column=1)

        Label(self.rmsrch, text="Start Date").grid(row=1, column=0)
        Entry(self.rmsrch).grid(row=1, column=1)

        Label(self.rmsrch, text="End Date").grid(row=1, column=2)
        Entry(self.rmsrch).grid(row=1, column=3)

        Button(self.rmsrch, text="Search",
               command=self.UserView).grid(row=3, column=3, sticky=E)
        
      
root = Tk() # creates the first window
prog = FancyHotels(root) # starts the class of functions
root.mainloop() # keeps program infinitely running until destroyed

#Phase 3: SQL Statements

#Login
#To determine a correct login (should return a username if correct):
SELECT C_Username FROM CUSTOMER WHERE (C_Username='[username]' AND Password='[password]')
SELECT M_Username FROM MANAGERS WHERE (M_Username='[username]' AND Password='[password]')

#New User 
#To determine if that username/email has already been taken:
SELECT C_Username, Email, Password FROM CUSTOMER WHERE C_Username='[username]' AND Email='[email]' AND Password='[password]'

#If that username is free, then:
INSERT INTO CUSTOMER(C_Username, Password, Email) VALUES('[username]', '[password]', '[email]')

#Returns all customers
SELECT C_Username, Password FROM CUSTOMER WHERE C_Username=C_Username AND Password=Password

#Returns all managers
SELECT M_Username, Password FROM MANAGERS WHERE M_Username=M_Username AND Password=Password

#Search Available Rooms
SELECT RoomNo, Location, Category, Capacity, Cost, ExtraCost 
FROM ROOMS WHERE Location = '[Location]' 
AND ROOMS.RoomNo NOT in ( 
	SELECT RoomNo
	FROM RESERVED_ROOMS
	WHERE RESERVED_ROOMS.ResID in 
		(SELECT ResID 
		FROM RESERVATIONS WHERE (StartDate <= '[StartDate]' AND EndDate >= '[EndDate]')
		OR (StartDate <= '[StartDate]' AND EndDate >= '[EndDate]') AND Cancelled = 0)
	AND Location = '[Location]'
)

#Payment Info
#Add payment info for a user
INSERT INTO PAYMENT_INFORMATION(NameOnCard, CardNum, ExpDate, CVV, C_Username)
VALUES ('[NameOnCard]', '[CardNum]', '[ExpDate]',  '[CVV]', '[C_Username]')

#Make Reservation
INSERT INTO RESERVATIONS(ResID, C_Username, StartDate, EndDate, FinalCost, CardNum, Cancelled)
VALUES ('[ResID]', '[C_Username]', '[StartDate]', '[EndDate]', '[FinalCost]', '[CardNum]', '0')

#Delete payment info by credit card number
DELETE FROM PAYMENT_INFORMATION WHERE CardNum='[CardNum]'

#Display payment info for specific user
SELECT * FROM PAYMENT_INFORMATION WHERE C_Username=C_Username
SELECT FROM PAYMENT_INFORMATION WHERE NameOnCard = '[NameOnCard]'

#############################
#Display Reservation based on ResID
SELECT RoomNo, Location, Category, Capacity, Cost, ExtraCost
FROM ROOMS
AND SELECT RoomNo, ResID FROM RESERVATIONS
WHERE RESERVED_ROOMS.RoomNo = ROOMS.RoomNo AND ResID='[ResID]'
AND SELECT ResID, StartDate, EndDate FROM RESERVATIONS
WHERE ResID='ResID' AND StartDate='[StartDate]' AND EndDate='[EndDate]'
############################


#Update Reservation
#First pull users' reservation
SELECT ResID, StartDate, EndDate 
FROM RESERVATIONS 
WHERE ResID = '[ResID]'

#Get City
SELECT Location 
FROM RESERVED_ROOMS
WHERE ResID='[ResID]'

#Then, Change Dates for Reservation
UPDATE RESERVATIONS
SET StartDate='[newStart]',EndDate='[newEnd]'
WHERE StartDate='[oldStart]' AND EndDate='[oldEnd]' AND ResID='[ResID]' 

#Cancel Reservation View - StartDate, EndDate
SELECT StartDate, EndDate 
FROM RESERVATIONS
WHERE ResID = 'ResID'

#Cancel Reservation View - RoomNo, Category, Capacity, Cost & ExtraCost
SELECT RoomNo, Category, Capacity, Cost, ExtraCost
FROM ROOMS
WHERE ROOMS.RoomNo in (
SELECT RoomNo
FROM RESERVED_ROOMS
WHERE RESERVED_ROOMS.ResID in (
SELECT ResID
FROM RESERVATIONS WHERE (
StartDate = '[StartDate]' AND EndDate = '[EndDate]') ) )

#Cancel Reservation View - ExtraCost Boolean
SELECT ExtraCost
FROM RESERVED_ROOMS
WHERE ResID =  'ResID'

#Cancel Reservation View - FinalCost
SELECT FinalCost
FROM RESERVATIONS
WHERE ResID = 'ResID'

#Cancel Reservation
UPDATE RESERVATIONS
SET ResID=ResID
WHERE Cancelled = '1'

#View Hotel Reviews
SELECT Rating, Comment
FROM HOTEL_REVIEWS
WHERE Location='[Location]'

#Give Review
INSERT INTO HOTEL_REVIEWS(Location, ReviewID, Rating, C_Username, Comment)
VALUES('[Location]', '[ReviewID]', '[Rating]', '[C_Username]', '[Comment]')

#Reservation Report for August and September
SELECT MONTHNAME(StartDate), Location, COUNT(ResID) AS 'Total Reservations' FROM (RESERVATIONS NATURAL JOIN RESERVED_ROOMS) 
WHERE ((StartDate BETWEEN '2015-08-01' AND '2015-08-31') AND (EndDate BETWEEN '2015-08-01' AND '2015-08-31')) 
OR ((StartDate BETWEEN '2015-09-01' AND '2015-09-30') AND (EndDate BETWEEN '2015-09-01' AND '2015-09-30'))
AND Location=Location GROUP BY MONTHNAME(StartDate), Location

#############################
#Popular Room Report for August
SELECT MONTHNAME(StartDate), Location FROM (RESERVATIONS NATURAL JOIN RESERVED_ROOMS) 
WHERE ((StartDate BETWEEN '2015-08-01' AND '2015-08-31') AND (EndDate BETWEEN '2015-08-01' AND '2015-08-31'))
AND Location=Location GROUP BY Location
SELECT COUNT(Category) FROM (RESERVATIONS NATURAL JOIN ROOMS)

#Gives incorrect count of rooms but it gives something so work with me
<<<<<<< Updated upstream
SELECT Location, Category, SUM(Category) FROM (ROOMS NATURAL JOIN RESERVATIONS)
WHERE ((StartDate BETWEEN '2015-08-01' AND '2015-08-31') AND (EndDate BETWEEN '2015-08-01' AND '2015-08-31'))
AND Location='Charlotte' GROUP BY Category

#Revenue Report
=======
SELECT ResID, Location, RoomNo
FROM (RESERVATIONS NATURAL JOIN RESERVED_ROOMS)
WHERE (
(StartDate BETWEEN '2015-08-01' AND '2015-08-31')
AND (EndDate BETWEEN '2015-08-01' AND '2015-08-31')
AND Location = 'Orlando')
#####################################

#Revenue Report for August and September
>>>>>>> Stashed changes
SELECT MONTHNAME(StartDate), Location, SUM(FinalCost) AS 'Total Revenue' FROM (RESERVATIONS NATURAL JOIN RESERVED_ROOMS)
WHERE ((StartDate BETWEEN '2015-08-01' AND '2015-08-31') AND (EndDate BETWEEN '2015-08-01' AND '2015-08-31')) 
OR ((StartDate BETWEEN '2015-09-01' AND '2015-09-30') AND (EndDate BETWEEN '2015-09-01' AND '2015-09-30'))
AND Location=Location GROUP BY MONTHNAME(StartDate), Location






